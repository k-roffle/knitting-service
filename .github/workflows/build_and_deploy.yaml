name: Build and Deploy

on: [push]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Set up JDK 11
        uses: actions/setup-java@v1
        with:
          java-version: 11

      - name: Cache Gradle packages
        uses: actions/cache@v2
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Build with Gradle
        run: ./gradlew clean build -x test

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push
        uses: docker/build-push-action@v2
        with:
          context: .
          push: true
          tags: dragonyool/knitting-service:latest
          build-args: |
            JWT_SECRET_KEY=${{ secrets.JWT_SECRET_KEY }}
            GOOGLE_CLIENT_SECRET=${{ secrets.GOOGLE_CLIENT_SECRET }}
            POSTGRESQL_PASSWORD=${{ secrets.POSTGRESQL_PASSWORD }}
            SSL_KEY_STORE_PASSWORD=${{ secrets.SSL_KEY_STORE_PASSWORD }}
            SSL_KEY_PASSWORD=${{ secrets.SSL_KEY_PASSWORD }}
            CERT_SECRET=${{ secrets.CERT_SECRET }}

      - name: Upload artifact
        uses: actions/upload-artifact@v2
        with:
          name: Package
          path: build/libs

      - name: Cleanup Gradle Cache
        run: |
          rm -f ~/.gradle/caches/modules-2/modules-2.lock
          rm -f ~/.gradle/caches/modules-2/gc.properties

  deploy:
    if: github.ref == 'refs/heads/main'
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: executing remote ssh commands using password
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.LINUX_HOST }}
          username: ${{ secrets.LINUX_USERNAME }}
          password: ${{ secrets.LINUX_PASSWORD }}
          port: ${{ secrets.LINUX_SSH_PORT }}
          script: |
            docker login -u dragonyool -p ${{ secrets.DOCKERHUB_PASSWORD }}
            docker pull dragonyool/knitting-service:latest
            docker stop knitting-service
            docker run -d -p 443:8080 --rm --name knitting-service -v /home/docker:/home dragonyool/knitting-service:latest
            docker logout

      - name: notify slack
        uses: 8398a7/action-slack@v3
        with:
            status: custom
            fields: repo,message,commit
            custom_payload: |
                {
                  attachments: [{
                    color: '${{ job.status }}' === 'success' ? 'good' : '${{ job.status }}' === 'failure' ? 'danger' : 'warning',
                    text: '${{ job.status }}' ===  'success' ? `*[${process.env.AS_REPO}]*\n${process.env.AS_MESSAGE}(${process.env.AS_COMMIT})이 배포되었습니다 :rocket:` : `*[${process.env.AS_REPO}]*\n${process.env.AS_MESSAGE}(${process.env.AS_COMMIT}) 배포가 실패했습니다. :sob:`
                  }]
                }
        env:
            SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
        if: always()
